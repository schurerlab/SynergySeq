runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
datasetInput_Dataset() <-"data/TCS_L1000_Ph2_Lvl5_MedianB_01_15_2019.txt"
Drugs_Sigs <- read.table(file="data/TCS_L1000_Ph2_Lvl5_MedianB_01_15_2019.txt",sep ="\t", header=TRUE)
View(Drugs_Sigs)
Drugs_Sigs <- na.omit(Drugs_Sigs)
row.names(Drugs_Sigs) <-  as.character(Drugs_Sigs$Genes)
View(Drugs_Sigs)
Drugs_Sigs <- Drugs_Sigs[,-1]
runApp('app7.R')
T <-t(Drugs_SigsR()[as.character("JQ1-(+)&trt_cp"),])
T <-t(Drugs_Sigs[as.character("JQ1-(+)&trt_cp"),])
TCGA_Sig <- read.table(file="data/TCGA_GBM_Signature.txt",header = TRUE,sep = "\t")
JQ1_Sig_v <- T
T
JQ1_Sig_v<- data.frame(JQ1_Sig_v,Genes=row.names(JQ1_Sig_v))
View(JQ1_Sig_v)
colnames(JQ1_Sig_v) <- c("JQ1","Genes")
TCGA_Sig_v <- TCGA_Sig
V <- unique(as.numeric(as.character(JQ1_Sig_v$JQ1)))
V2 <- max(abs(V))
V4 <- as.numeric(33)/100
V5 <- V2*V4
V6 <- round(V5)
JQ1_Sig_v$JQ1 <- as.numeric(as.character(JQ1_Sig_v$JQ1))
JQ1_Sig_v2 <- JQ1_Sig_v[which(JQ1_Sig_v$JQ1 > V6 | JQ1_Sig_v$JQ1 < -V6),]
View(JQ1_Sig_v2)
JQ1_Sig_v2 <- JQ1_Sig_v2[which(JQ1_Sig_v2$JQ1 > 0 | JQ1_Sig_v2$JQ1 < 0),]
View(JQ1_Sig_v2)
jq1_genes <- as.character(JQ1_Sig_v2$Genes)
Drugs_Sigs2 <- Drugs_Sigs[,jq1_genes]
tt <-  apply(Drugs_Sigs2,1,function(x){x*JQ1_Sig_v2$JQ1})
View(tt)
tt2 <-  apply(tt,2,function(x) { a <- sum(x>0)
)
tt2 <-  apply(tt,2,function(x) {
a <- sum(x>0)
b <- sum(x<0)
b[b==0] <- 1
c <- a/b
c
})
tt3 <- as.data.frame(tt2)
View(tt3)
jq1_genes2 <- as.character(JQ1_Sig_v[which(JQ1_Sig_v$JQ1==0),2])
jq1_genes2 <- as.character(JQ1_Sig_v[which(JQ1_Sig_v$JQ1 < V6 & JQ1_Sig_v$JQ1 > -V6),2])
runApp('app7.R')
View(tt3)
JQ1_Sig_v2
JQ1_Sig_v2$JQ1
rr3 <- cor(JQ1_Sig_v2$JQ1,Drugs_Sigs2)
rr3 <- cor(JQ1_Sig_v2$JQ1,t(Drugs_Sigs2))
View(rr3)
rr3 <- t(cor(JQ1_Sig_v2$JQ1,t(Drugs_Sigs2)))
View(rr3)
jq1_genes2 <- as.character(JQ1_Sig_v[which(JQ1_Sig_v$JQ1 < V6 & JQ1_Sig_v$JQ1 > -V6),2])
V6
hist(V)
JQ1_Sig_v
non_JQ1 <- JQ1_Sig_v[jq1_genes2,]
View(non_JQ1)
non_JQ1$JQ1
Drugs_Sigs3 <- Drugs_Sigs[,jq1_genes2]
rr4 <- t(cor(non_JQ1$JQ1,t(Drugs_Sigs3)))
View(rr4)
View(TCGA_Sig_v)
View(TCGA_Sig)
row.names(TCGA_Sig_v) <- as.character(TCGA_Sig_v$Genes)
TCGA_Sig_v2 <-TCGA_Sig_v[which(TCGA_Sig_v$Genes %in%jq1_genes2 ),]
View(TCGA_Sig_v2)
row.names(TCGA_Sig_v2) <- as.character(TCGA_Sig_v2$Genes)
View(JQ1_Sig_v2)
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
runApp('app7.R')
load("/Users/stathias/Dropbox/UMiami/Lab/Projects/2016_11_21_Ayad_Claras_Paper/3.Jan_2019_Analysis/Script1.RData")
Prof_75_Genes <- c("RAB3A","NEUROD1","ATXN1","KIF5A","CHD3","LRP1B","PARP6")
Prof_75_Genes2 <- intersect(Prof_75_Genes,row.names(M4))
P1 <- Median_Norm[Prof_75_Genes2,]
P0 <- as.numeric(as.character(P1$P0))
P3 <- P1-P0
colnames(P3) <- c(0,7,12,18,21,56)
P3$Genes <- row.names(P3)
P4 <- melt(P3)
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line()+theme_minimal() +ylab("log2FC")
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line()+theme_minimal() +ylab("log2FC")
Prof_47_Genes <- c("GLI2","CENPJ","CENPL","PLK1","CHEK1","KIF23","CENPF","NEK2","CENPK","FOXM1","CDK6")
Prof_47_Genes2 <- intersect(Prof_47_Genes,row.names(M4))
P1 <- Median_Norm[Prof_47_Genes2,]
P0 <- as.numeric(as.character(P1$P0))
P3 <- P1-P0
colnames(P3) <- c(0,7,12,18,21,56)
P3$Genes <- row.names(P3)
P4 <- melt(P3)
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line() +theme_minimal() +geom_label_repel(aes(label = Genes),
nudge_x = 1,
na.rm = TRUE)
library(cmapR)
library(Biobase)
library(GEOquery)
library(limma)
library(reshape)
library(ggrepel)
Prof_75_Genes <- c("RAB3A","NEUROD1","ATXN1","KIF5A","CHD3","LRP1B","PARP6")
Prof_75_Genes2 <- intersect(Prof_75_Genes,row.names(M4))
P1 <- Median_Norm[Prof_75_Genes2,]
P0 <- as.numeric(as.character(P1$P0))
P3 <- P1-P0
colnames(P3) <- c(0,7,12,18,21,56)
P3$Genes <- row.names(P3)
P4 <- melt(P3)
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line()+theme_minimal() +ylab("log2FC")
Prof_47_Genes <- c("GLI2","CENPJ","CENPL","PLK1","CHEK1","KIF23","CENPF","NEK2","CENPK","FOXM1","CDK6")
Prof_47_Genes2 <- intersect(Prof_47_Genes,row.names(M4))
P1 <- Median_Norm[Prof_47_Genes2,]
P0 <- as.numeric(as.character(P1$P0))
P3 <- P1-P0
colnames(P3) <- c(0,7,12,18,21,56)
P3$Genes <- row.names(P3)
P4 <- melt(P3)
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line() +theme_minimal() +geom_label_repel(aes(label = Genes),
nudge_x = 1,
na.rm = TRUE)
## FIGURE
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="grey") +theme_minimal() +ylab("log2FC")
## FIGURE
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="darkgrey") +theme_minimal() +ylab("log2FC")
## FIGURE
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="darkgrey2") +theme_minimal() +ylab("log2FC")
## FIGURE
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="darkgrey") +theme_minimal() +ylab("log2FC")
## FIGURE
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="#666666") +theme_minimal() +ylab("log2FC")
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="#666666") +theme_minimal() +ylab("log2FC")
setwd("~/Dropbox/UMiami/Lab/Projects/2016_11_21_Ayad_Claras_Paper/3.Jan_2019_Analysis")
ggplot(P4, aes(x=variable, y=value,group=Genes))+geom_line(color="#666666") +theme_minimal() +ylab("log2FC")
setwd("~/Dropbox/UMiami/Lab/Projects/2019_01_24_Grant_Ayad_Schurer")
Robs_DEGs <- read.csv(file="20190124_gbm1_WholeTranscriptomeMarkers_all.csv")
Ph2_TCS <- read.delim(file="matPH3_2_1_0.2_0.3_L1000_Batch2017_Regina_removed.txt",row.names=1)
H <- Ph2_TCS[,1:10]
Ph2_TCS <- na.omit(Ph2_TCS)
L1000_Genes <- colnames(Ph2_TCS)
Robs_DEGs2 <- Robs_DEGs[which(Robs_DEGs$gene %in% L1000_Genes),]
a <- as.vector(table(Robs_DEGs$cluster))
b <- as.vector(table(Robs_DEGs2$cluster))
plot(a,b)
Final_Matrix2 <- read.table(file="Compounds_Ranked_per_Cluster_Discordance.txt")
View(Final_Matrix2)
Final_Matrix2 <- read.table(file="Compounds_Ranked_per_Cluster_Discordance.txt",header=TRUE)
View(Final_Matrix2)
Final_Matrix2 <- read.table(file="Compounds_Ranked_per_Cluster_Discordance.txt",header=TRUE,row.names=1)
View(Final_Matrix2)
N1 <- names(Sort1)[1:20]
x <- Final_Matrix2[1,]
Sort1 <- sort(x)
View(Sort1)
View(Sort1)
Sort1 <- sort(x,decreasing = TRUE)
N1 <- names(Sort1)[1:20]
Sort1 <- t(sort(x,decreasing = TRUE))
Sort1
View(Final_Matrix2)
x <- Final_Matrix2[,1]
Sort1 <- t(sort(x,decreasing = TRUE))
View(Sort1)
Sort1 <- sort(x,decreasing = TRUE)
Sort1
names(x)<- row.names(Final_Matrix2)
Sort1 <- sort(x,decreasing = TRUE)
N1 <- names(Sort1)[1:20]
N1
View(Final_Matrix2)
K1 <- apply(Final_Matrix2,2,function(x){
names(x)<- row.names(Final_Matrix2)
Sort1 <- sort(x,decreasing = TRUE)
N1 <- names(Sort1)[1:20]
})
View(K1)
K1 <- apply(Final_Matrix2,2,function(x){
names(x)<- row.names(Final_Matrix2)
Sort1 <- sort(x,decreasing = TRUE)
N1 <- names(Sort1)[1:20]
})
View(K1)
K2 <- unlist(K1)
View(K2)
K2 <- as.vector(K1)
K2 <- unique(as.vector(K1))
Rays_Activity_DB <- read.table(file="L1KcompundsVersusAllBioactiveTargetsInChembl.txt")
Rays_Activity_DB <- read.delim(file="L1KcompundsVersusAllBioactiveTargetsInChembl.txt",sep="\t")
View(Rays_Activity_DB)
BROAD_Dictionary <- read.delim(file="GSE70138_Broad_LINCS_pert_info_2017-03-06.txt")
View(BROAD_Dictionary)
library(plyr)
Rays_Activity_DB$Names <- mapvalues(as.character(Rays_Activity_DB$center_canonical_id),from=as.character(BROAD_Dictionary$pert_id, to = as.character(BROAD_Dictionary$pert_iname)))
Rays_Activity_DB$Names <- mapvalues(as.character(Rays_Activity_DB$center_canonical_id),from=as.character(BROAD_Dictionary$pert_id), to = as.character(BROAD_Dictionary$pert_iname))
View(Rays_Activity_DB)
View(K1)
Drugs <- as.character(K1[,1])
Rays_Activity_DB2 <- Rays_Activity_DB[which(Rays_Activity_DB$Names %in% Drugs,)]
Rays_Activity_DB2 <- Rays_Activity_DB[which(Rays_Activity_DB$Names %in% Drugs),]
View(Rays_Activity_DB2)
library(reshape)
View(Rays_Activity_DB2)
Rays_Activity_DB3 <- Rays_Activity_DB2[,c("Names","chembl_gene_symbol","pchembl_value_Median")]
View(Rays_Activity_DB3)
library(reshape)
Rays_Activity_DB3 <- cast(Rays_Activity_DB2,add.missing=TRUE,fill=0)
View(Rays_Activity_DB3)
Rays_Activity_DB2 <- Rays_Activity_DB[which(Rays_Activity_DB$Names %in% Drugs),]
Rays_Activity_DB3 <- Rays_Activity_DB2[,c("Names","chembl_gene_symbol","pchembl_value_Median")]
library(reshape)
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,add.missing=TRUE,fill=0)
View(Rays_Activity_DB3)
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,add.missing=TRUE,fill=0,value=pchembl_value_Median)
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,add.missing=TRUE,fill=0,value="pchembl_value_Median")
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,Names~chembl_gene_symbol,add.missing=TRUE,fill=0)
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,Names~chembl_gene_symbol,add.missing=TRUE,fill=0,fun.aggregate=median)
View(Rays_Activity_DB4)
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,chembl_gene_symbol~Names,add.missing=TRUE,fill=0,fun.aggregate=median)
View(Rays_Activity_DB4)
Rays_Activity_DB3 <- Rays_Activity_DB3[which(Rays_Activity_DB3$Names != ""),]
Rays_Activity_DB3 <- Rays_Activity_DB2[,c("Names","chembl_gene_symbol","pchembl_value_Median")]
Rays_Activity_DB3 <- Rays_Activity_DB3[which(Rays_Activity_DB3$Names != ""),]
View(Rays_Activity_DB3)
Rays_Activity_DB3 <- Rays_Activity_DB3[which(Rays_Activity_DB3$chembl_gene_symbol != ""),]
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,chembl_gene_symbol~Names,add.missing=TRUE,fill=0,fun.aggregate=median)
View(Rays_Activity_DB4)
Rays_Activity_DB3 <- Rays_Activity_DB3[which(Rays_Activity_DB3$chembl_gene_symbol != ""),]
Rays_Activity_DB4 <- cast(Rays_Activity_DB3,chembl_gene_symbol~Names,add.missing=TRUE,fill=0,fun.aggregate=median)
View(Rays_Activity_DB4)
Rays_Activity_DB4 <- Rays_Activity_DB4[-1,]
View(Rays_Activity_DB4)
row.names(Rays_Activity_DB4) <- as.character(Rays_Activity_DB4$chembl_gene_symbol)
Rays_Activity_DB4 <- Rays_Activity_DB4[,-1]
View(Rays_Activity_DB4)
Heat <- heatmap.2(Rays_Activity_DB4, col = "greenred", margins=c(8,13), dendrogram="both", trace="none", density.info="none", cexRow="0.2", cexCol="0.2")
library(gplots)
Heat <- heatmap.2(Rays_Activity_DB4, col = "greenred", margins=c(8,13), dendrogram="both", trace="none", density.info="none", cexRow="0.2", cexCol="0.2")
Rays_Activity_DB5 <- as.matrix(Rays_Activity_DB4)
View(Rays_Activity_DB5)
View(Rays_Activity_DB5)
Rays_Activity_DB5 <- apply(Rays_Activity_DB4,2,as.numeric)
View(Rays_Activity_DB5)
colnames(Rays_Activity_DB5) <- colnames(Rays_Activity_DB4)
View(Rays_Activity_DB5)
row.names(Rays_Activity_DB5) <- row.names(Rays_Activity_DB4)
View(Rays_Activity_DB5)
Heat <- heatmap.2(Rays_Activity_DB5, col = "greenred", margins=c(8,13), dendrogram="both", trace="none", density.info="none", cexRow="0.2", cexCol="0.2")
View(K1)
K2 <- unique(as.vector(K1))
View(Final_Matrix2)
Final_Matrix3 <- Final_Matrix2[K2,]
View(Final_Matrix3)
View(Final_Matrix2)
write.table(Final_Matrix3,file="Compounds_Ranked_per_Cluster_Discordance_Top20.txt",sep="\t")
Top_drugs <- row.names(Final_Matrix3)
Drug_Annotations <- read.csv(file="41467_2018_7659_MOESM7_ESM.csv")
View(Drug_Annotations)
Drug_Annotations2 <- Drug_Annotations[which(Drug_Annotations$Names %in%Top_drugs ),]
View(Drug_Annotations2)
Drug_Annotations2[is.na(Drug_Annotations2)] <- "Not Available"
View(Drug_Annotations2)
Drug_Annotations2 <- Drug_Annotations[which(Drug_Annotations$Names %in%Top_drugs ),]
Drug_Annotations2$Curated_MOA <- droplevels(Drug_Annotations2$Curated_MOA)
T1 <- as.data.frame(table(Drug_Annotations2$Curated_MOA))
View(T1)
library(ComplexHeatmap)
T2 <- T1[sort(T1$Freq,decreasing = TRUE),]
View(T2)
sort(T1$Freq,decreasing = TRUE)
T2 <-  T1[order(Freq),]
T2 <-  T1[order(T1$Freq),]
View(T2)
T2 <-  T1[order(T1$Freq,decreasing = TRUE),]
View(T2)
View(T2)
View(T2)
top5 <- as.character(T2[1:5,])
top5 <- as.character(T2[1:5,T1])
View(T2)
top5 <- as.character(T2[1:5,"Var1"])
Drug_Annotations3 <- Drug_Annotations2[which(Drug_Annotations2$Names %in% top5),]
Drug_Annotations3
top5
View(Drug_Annotations2)
Drug_Annotations3 <- Drug_Annotations2[which(Drug_Annotations2$Curated_MOA %in% top5),]
View(Drug_Annotations3)
Drug_Annotations3 <- Drug_Annotations3[,-1]
Drug_Annotations3 <- Drug_Annotations2[which(Drug_Annotations2$Curated_MOA %in% top5),]
Drug_Annotations3 <- Drug_Annotations3[,-2]
View(Drug_Annotations3)
View(Drug_Annotations2)
Drug_Annotations4 <- Drug_Annotations2[which(! Drug_Annotations2$Curated_MOA %in% top5),]
View(Drug_Annotations4)
Drug_Annotations4 <- Drug_Annotations4[,-2]
View(Drug_Annotations4)
Drug_Annotations4$Curated_MOA <- "Not Av"
View(Drug_Annotations4)
Drug_Annotations5 <- rbind(Drug_Annotations3,Drug_Annotations4)
View(Drug_Annotations5)
unique(Drug_Annotations5)
unique(Drug_Annotations5$Curated_MOA)
ha = HeatmapAnnotation(df = Col2, col = list(Cells = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")))
ha = HeatmapAnnotation(df = Drug_Annotations5, col = list(Cells = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")))
Final_Matrix4 <- as.matrix(Final_Matrix3)
View(fit)
View(Final_Matrix3)
View(Final_Matrix4)
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
View(Drug_Annotations5)
View(Drug_Annotations4)
ha = HeatmapAnnotation(df = Drug_Annotations5, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
ha
View(Final_Matrix4)
row.names(Drug_Annotations5) <- as.character(Drug_Annotations5$Names)
View(Drug_Annotations5)
View(Drug_Annotations3)
View(Drug_Annotations4)
Drug_Annotations4 <- Drug_Annotations2[which(!Drug_Annotations2$Curated_MOA %in% top5),]
View(Drug_Annotations4)
View(Drug_Annotations)
Drugs1 <- as.character(Drug_Annotations3$Names)
Drug_Annotations4 <- Drug_Annotations2[which(!Drug_Annotations2$Names %in% Drugs1),]
Drug_Annotations4 <- Drug_Annotations4[,-2]
Drug_Annotations4$Curated_MOA <- "Not Av"
Drug_Annotations5 <- rbind(Drug_Annotations3,Drug_Annotations4)
row.names(Drug_Annotations5) <- as.character(Drug_Annotations5$Names)
View(Drug_Annotations5)
Drug_Annotations5 <- unique(Drug_Annotations5)
row.names(Drug_Annotations5) <- as.character(Drug_Annotations5$Names)
View(Drug_Annotations5)
Drug_Annotations6 <- Drug_Annotations5[-1565,]
View(Drug_Annotations6)
Drug_Annotations6 <- Drug_Annotations5[-54,]
View(Drug_Annotations6)
row.names(Drug_Annotations6) <- as.character(Drug_Annotations6$Names)
View(Drug_Annotations6)
Drug_Annotations5 <- rbind(Drug_Annotations3,Drug_Annotations4)
Drug_Annotations5 <- unique(Drug_Annotations5)
which(Drug_Annotations5$Names=="ENMD-2076")
Drug_Annotations6 <- Drug_Annotations5[-26,]
row.names(Drug_Annotations6) <- as.character(Drug_Annotations6$Names)
Final_Matrix4 <- as.matrix(Final_Matrix3)
ha = HeatmapAnnotation(df = Drug_Annotations6, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
Drug_Annotations7 <- Drug_Annotations6[row.names(Final_Matrix4),]
ha = HeatmapAnnotation(df = Drug_Annotations7, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
View(Final_Matrix4)
View(Drug_Annotations6)
View(Drug_Annotations7)
View(Final_Matrix4)
Drug_Annotations6$Curated_MOA <- droplevels(Drug_Annotations6$Curated_MOA)
Drug_Annotations7 <- Drug_Annotations6[row.names(Final_Matrix4),]
ha = HeatmapAnnotation(df = Drug_Annotations7, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
Drug_Annotations6$Names <- droplevels(Drug_Annotations6$Names
Drug_Annotations6$Names <- droplevels(Drug_Annotations6$Names)
Final_Matrix4 <- as.matrix(Final_Matrix3)
Drug_Annotations7 <- Drug_Annotations6[row.names(Final_Matrix4),]
ha = HeatmapAnnotation(df = Drug_Annotations7, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
Drug_Annotations6$Names <- droplevels(Drug_Annotations6$Names)
Drug_Annotations7 <- Drug_Annotations6[row.names(Final_Matrix4),]
ha = HeatmapAnnotation(df = Drug_Annotations7, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
View(Drug_Annotations7)
ha
Drug_Annotations8 <- Drug_Annotations7[,-1,drop=FALSE]
ha = HeatmapAnnotation(df = Drug_Annotations8, col = list(Curated_MOA = c("Dopamine receptor antagonist" = "red", "Adrenergic receptor antagonist" = "blue","VEGFR inhibitor"="green","Cyclooxygenase inhibitor"="black","Aurora kinase inhibitor"="pink","Not Av"="grey")),which="row")
Heatmap(Final_Matrix4, name = "Connectivity Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
Heatmap(Final_Matrix4, name = "Discordance Score",show_row_names=FALSE,clustering_distance_rows = "euclidean") +ha
